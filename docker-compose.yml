version: '3.8'

services:
  keycloak-db:
    image: postgres:13
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    depends_on:
      keycloak-db:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_HOSTNAME: localhost
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
    ports:
      - "8080:8080"
    command: ["start-dev"]
    networks:
      - backend-network
      - frontend-network

  backend:
    build:
      context: .  # Usa a raiz do projeto
      dockerfile: dockerfile.backend  # Nome do seu arquivo Dockerfile
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
      FLASK_DEBUG: "1"
      KEYCLOAK_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: tarefas-app
      KEYCLOAK_CLIENT_ID: backend-service
      KEYCLOAK_CLIENT_SECRET: sua_chave_secreta
    volumes:
      - .:/app  # Mapeia a raiz do projeto
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - backend-network
      - frontend-network

  frontend:
    build:
      context: .  # Usa a raiz do projeto
      dockerfile: dockerfile.frontend  # Nome do seu arquivo Dockerfile
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://backend:5000
      VITE_KEYCLOAK_URL: http://keycloak:8080
      VITE_KEYCLOAK_REALM: tarefas-app
      VITE_KEYCLOAK_CLIENT_ID: frontend-client
    volumes:
      - .:/app  # Mapeia a raiz do projeto
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - frontend-network

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  keycloak-db-data: